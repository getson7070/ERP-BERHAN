apiVersion: apps/v1
kind: Deployment
metadata:
  name: erp-berhan
spec:
  replicas: 3
  selector:
    matchLabels:
      app: erp-berhan
  template:
    metadata:
      labels:
        app: erp-berhan
    spec:
      securityContext:
        runAsNonRoot: true
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false
        seccompProfile:
          type: RuntimeDefault
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: erp-berhan
                topologyKey: kubernetes.io/hostname
      containers:
        - name: web
          image: erp-berhan:v1.0.0
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8000
          securityContext:
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: erp-secrets
                  key: database_url
            - name: FLASK_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: erp-secrets
                  key: flask_secret
            - name: DB_POOL_SIZE
              value: "10"
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "256Mi"
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8000
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 20
