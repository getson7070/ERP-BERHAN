version: '3.8'
services:
  web:
    build: .
    command: gunicorn --config gunicorn.conf.py wsgi:app
    environment:
      ENV: production
      DATABASE_URL: postgresql://erp_app:${APP_DB_PASSWORD}@db:5432/erp?sslmode=disable
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      SECRET_KEY: ${SECRET_KEY}
      JWT_SECRETS: ${JWT_SECRETS}
      SENTRY_DSN: ${SENTRY_DSN}
      BACKUP_ENCRYPTION_KEY: ${BACKUP_ENCRYPTION_KEY}
    depends_on:
      - db
      - redis
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://web:8000/healthz"]
      interval: 30s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
  worker:
    build: .
    command: celery -A erp.app.celery worker --loglevel=info
    environment:
      ENV: production
      DATABASE_URL: postgresql://erp_app:${APP_DB_PASSWORD}@db:5432/erp?sslmode=disable
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      BACKUP_ENCRYPTION_KEY: ${BACKUP_ENCRYPTION_KEY}
      SENTRY_DSN: ${SENTRY_DSN}
    depends_on:
      - db
      - redis
    restart: always
    healthcheck:
      test: ["CMD", "celery", "-A", "erp.app.celery", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
  beat:
    build: .
    command: celery -A erp.app.celery beat --loglevel=info
    environment:
      ENV: production
      DATABASE_URL: postgresql://erp_app:${APP_DB_PASSWORD}@db:5432/erp?sslmode=disable
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      BACKUP_ENCRYPTION_KEY: ${BACKUP_ENCRYPTION_KEY}
      SENTRY_DSN: ${SENTRY_DSN}
    depends_on:
      - db
      - redis
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep 'celery beat' | grep -qv grep"]
      interval: 30s
      timeout: 10s
      retries: 3
  backup:
    build: .
    command: sh -c "while true; do python backup.py; sleep 86400; done"
    environment:
      ENV: production
      DATABASE_URL: postgresql://erp_app:${APP_DB_PASSWORD}@db:5432/erp?sslmode=disable
      BACKUP_ENCRYPTION_KEY: ${BACKUP_ENCRYPTION_KEY}
      S3_BUCKET: ${S3_BUCKET}
      S3_ENDPOINT: ${S3_ENDPOINT}
      AWS_REGION: ${AWS_REGION}
      SENTRY_DSN: ${SENTRY_DSN}
    depends_on:
      - db
    restart: always
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: erp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./deploy/init-app-user.sh:/docker-entrypoint-initdb.d/init-app-user.sh:ro
    restart: always
  redis:
    image: redis:7-alpine
    restart: always
    volumes:
      - redisdata:/data
volumes:
  pgdata:
  redisdata:
