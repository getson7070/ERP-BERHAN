name: Add Per-Endpoint Limits (PR)
on:
  workflow_dispatch:
    inputs:
      base_branch:
        description: Base branch
        default: main
        required: true
permissions:
  contents: write
  pull-requests: write
jobs:
  edit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { ref: ${{ github.event.inputs.base_branch }}, fetch-depth: 0 }
      - name: Add decorators
        shell: bash
        run: |
          set -euo pipefail
          python - <<'PY'
import re, pathlib

def ensure_import(file):
    p=pathlib.Path(file)
    if not p.exists(): return False
    s=p.read_text()
    if "from erp.extensions import limiter" not in s:
        s = "from erp.extensions import limiter\n" + s
    p.write_text(s); return True

def add_limit(file, route_re, dec):
    p=pathlib.Path(file)
    if not p.exists(): return 0
    s=p.read_text()
    pat = rf'(@bp\\.post\\("{route_re}"\\)\\s*\\n)(def\\s+\\w+\\()'
    ns, n = re.subn(pat, rf'\\1{dec}\\n\\2', s)
    if n: p.write_text(ns)
    return n

changed=0
# auth
if ensure_import("erp/routes/auth.py"):
    changed += add_limit("erp/routes/auth.py", "/auth/token", "@limiter.limit(\"10 per minute; 3 per second\")")
    changed += add_limit("erp/routes/auth.py", "/auth/login", "@limiter.limit(\"10 per minute; 3 per second\")")
# finance
if ensure_import("erp/finance/routes_approval.py"):
    changed += add_limit("erp/finance/routes_approval.py", r"/journals/<uuid:entry_id>/reverse", "@limiter.limit(\"10 per minute\")")
    changed += add_limit("erp/finance/routes_approval.py", "/finance/journals", "@limiter.limit(\"30 per minute\")")
    changed += add_limit("erp/finance/routes_approval.py", "/journals", "@limiter.limit(\"30 per minute\")")
print(f"decorations_added={changed}")
PY
      - uses: peter-evans/create-pull-request@v6
        with:
          branch: ci/add-limits-${{ github.run_id }}
          base: ${{ github.event.inputs.base_branch }}
          commit-message: "chore: add per-endpoint rate limits"
          title: "Add per-endpoint rate limits"
          body: "Decorates auth and finance routes with Flask-Limiter."
