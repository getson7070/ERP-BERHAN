version: '3.8'
services:
  web:
    build: .
    command: gunicorn --config gunicorn.conf.py wsgi:app
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://erp_app:app_password@db:5432/erp?sslmode=require
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      SECRET_KEY: ${SECRET_KEY}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      SECURITY_PASSWORD_SALT: ${SECURITY_PASSWORD_SALT}
      SENTRY_DSN: ${SENTRY_DSN}
      BACKUP_ENCRYPTION_KEY: ${BACKUP_ENCRYPTION_KEY}
    depends_on:
      - db
      - redis
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
  worker:
    build: .
    command: celery -A erp.app.celery worker --loglevel=info
    environment:
      DATABASE_URL: postgresql://erp_app:app_password@db:5432/erp?sslmode=require
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      - db
      - redis
    restart: always
    healthcheck:
      test: ["CMD", "celery", "-A", "erp.app.celery", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
  beat:
    build: .
    command: celery -A erp.app.celery beat --loglevel=info
    environment:
      DATABASE_URL: postgresql://erp_app:app_password@db:5432/erp?sslmode=require
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      - worker
    restart: always
    healthcheck:
      test: ["CMD", "celery", "-A", "erp.app.celery", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: supersecret
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./deploy/init-app-user.sql:/docker-entrypoint-initdb.d/init-app-user.sql:ro
  redis:
    image: redis:7
    restart: always
volumes:
  pgdata:
